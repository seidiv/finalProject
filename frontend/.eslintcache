[{"/home/sajad/Desktop/finalproject/frontend/src/index.js":"1","/home/sajad/Desktop/finalproject/frontend/src/components/layout/Header.js":"2","/home/sajad/Desktop/finalproject/frontend/src/containers/App.js":"3","/home/sajad/Desktop/finalproject/frontend/src/store/store.js":"4","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/index.js":"5","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/mainboards.js":"6","/home/sajad/Desktop/finalproject/frontend/src/store/actions/types.js":"7","/home/sajad/Desktop/finalproject/frontend/src/components/mainboards/MainboardList.js":"8","/home/sajad/Desktop/finalproject/frontend/src/store/actions/mainboards.js":"9","/home/sajad/Desktop/finalproject/frontend/src/components/mainboards/MainboardCard.js":"10","/home/sajad/Desktop/finalproject/frontend/src/components/layout/Alerts.js":"11","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/errors.js":"12","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/messages.js":"13","/home/sajad/Desktop/finalproject/frontend/src/components/layout/SearchBox.js":"14","/home/sajad/Desktop/finalproject/frontend/src/store/actions/search.js":"15","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/search.js":"16","/home/sajad/Desktop/finalproject/frontend/src/components/accounts/Login.js":"17","/home/sajad/Desktop/finalproject/frontend/src/components/accounts/RegisterMainboard.js":"18","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/auth.js":"19","/home/sajad/Desktop/finalproject/frontend/src/components/common/PrivateRoute.js":"20","/home/sajad/Desktop/finalproject/frontend/src/store/actions/auth.js":"21","/home/sajad/Desktop/finalproject/frontend/src/store/actions/messages.js":"22","/home/sajad/Desktop/finalproject/frontend/src/components/layout/scroll.js":"23","/home/sajad/Desktop/finalproject/frontend/src/store/actions/relatedSensors.js":"24","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/relatedSensors.js":"25","/home/sajad/Desktop/finalproject/frontend/src/components/sensors/SensorList.js":"26","/home/sajad/Desktop/finalproject/frontend/src/components/sensors/SensorCard.js":"27","/home/sajad/Desktop/finalproject/frontend/src/store/actions/sensorTypes.js":"28","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/sensorTypes.js":"29"},{"size":250,"mtime":1611940545425,"results":"30","hashOfConfig":"31"},{"size":1655,"mtime":1611997134607,"results":"32","hashOfConfig":"31"},{"size":2306,"mtime":1612092275263,"results":"33","hashOfConfig":"31"},{"size":396,"mtime":1611940545425,"results":"34","hashOfConfig":"31"},{"size":488,"mtime":1612103835444,"results":"35","hashOfConfig":"31"},{"size":387,"mtime":1611940545425,"results":"36","hashOfConfig":"31"},{"size":578,"mtime":1612102441852,"results":"37","hashOfConfig":"31"},{"size":1906,"mtime":1612107760870,"results":"38","hashOfConfig":"31"},{"size":682,"mtime":1611940545425,"results":"39","hashOfConfig":"31"},{"size":1414,"mtime":1612104834065,"results":"40","hashOfConfig":"31"},{"size":673,"mtime":1611940545425,"results":"41","hashOfConfig":"31"},{"size":381,"mtime":1611940545425,"results":"42","hashOfConfig":"31"},{"size":322,"mtime":1612018560586,"results":"43","hashOfConfig":"31"},{"size":936,"mtime":1612092581195,"results":"44","hashOfConfig":"31"},{"size":168,"mtime":1611940545425,"results":"45","hashOfConfig":"31"},{"size":854,"mtime":1612008012617,"results":"46","hashOfConfig":"31"},{"size":2257,"mtime":1612010033652,"results":"47","hashOfConfig":"31"},{"size":3320,"mtime":1612123910024,"results":"48","hashOfConfig":"31"},{"size":929,"mtime":1612020072552,"results":"49","hashOfConfig":"31"},{"size":575,"mtime":1612007985629,"results":"50","hashOfConfig":"31"},{"size":1583,"mtime":1612036851417,"results":"51","hashOfConfig":"31"},{"size":336,"mtime":1612018504943,"results":"52","hashOfConfig":"31"},{"size":364,"mtime":1612036943695,"results":"53","hashOfConfig":"31"},{"size":814,"mtime":1612098739503,"results":"54","hashOfConfig":"31"},{"size":524,"mtime":1612098748747,"results":"55","hashOfConfig":"31"},{"size":2490,"mtime":1612107876489,"results":"56","hashOfConfig":"31"},{"size":1124,"mtime":1612111033826,"results":"57","hashOfConfig":"31"},{"size":755,"mtime":1612103281174,"results":"58","hashOfConfig":"31"},{"size":450,"mtime":1612103720105,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"18xzarp",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},"/home/sajad/Desktop/finalproject/frontend/src/index.js",[],["136","137"],"/home/sajad/Desktop/finalproject/frontend/src/components/layout/Header.js",["138"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Header extends Component {\n  render() {\n    return (\n      <nav\n        style={{\n          background:\n            \"linear-gradient(to left,rgba(7, 27, 82, 1) 0% , rgba(0, 128, 128, 1) 100%) \",\n          height: \"100px\",\n        }}\n        className=\"navbar navbar-expand-sm navbar-light bg-light\"\n      >\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarTogglerDemo01\"\n            aria-controls=\"navbarTogglerDemo01\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n            <a className=\"navbar-brand \" href=\"#\">\n              mainboard api\n            </a>\n          </div>\n          <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item\">\n              <Link\n                to=\"/register\"\n                className=\"f4 br3 pa3 ma2 fw6 db bg-lightest-blue link hover-gray nav-link\"\n              >\n                Register\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/login\"\n                className=\"f4 br3 pa3 ma2 fw6 db bg-lightest-blue link hover-gray nav-link\"\n              >\n                Login\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","/home/sajad/Desktop/finalproject/frontend/src/containers/App.js",["139","140","141"],"import React, { Component, Fragment } from \"react\";\nimport Header from \"../components/layout/Header\";\nimport Alerts from \"../components/layout/Alerts\";\nimport MainboardList from \"../components/mainboards/MainboardList\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store/store\";\nimport PrivateRoute from \"../components/common/PrivateRoute\";\nimport Login from \"../components/accounts/Login\";\nimport RegisterMainboard from \"../components/accounts/RegisterMainboard\";\nimport { loadUser } from \"../store/actions/auth\";\nimport SensorList from \"../components/sensors/SensorList\";\n// Alert options\nconst alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n};\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(loadUser());\n    }\n\n    render() {\n        return (\n            <Provider store={store}>\n                <AlertProvider template={AlertTemplate} {...alertOptions}>\n                    <Router>\n                        <div className=\"tc\">\n                            <Header />\n                            <Alerts />\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    component={MainboardList}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/register\"\n                                    component={RegisterMainboard}\n                                />\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route\n                                    exact\n                                    path=\"/sensors\"\n                                    component={SensorList}\n                                />\n                            </Switch>\n                        </div>\n                    </Router>\n                </AlertProvider>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","/home/sajad/Desktop/finalproject/frontend/src/store/store.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/reducers/index.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/reducers/mainboards.js",["142"],"import { GET_MAINBOARDS_LIST } from '../actions/types.js';\n\nconst initialState = {\n    mainboards: []\n}\n\nexport default function (state=initialState , action) {\n    switch (action.type) {\n        case GET_MAINBOARDS_LIST:\n\n            return {\n                ...state,\n                mainboards: action.payload\n            };\n    \n        default:\n            return state;\n    }    \n}","/home/sajad/Desktop/finalproject/frontend/src/store/actions/types.js",[],"/home/sajad/Desktop/finalproject/frontend/src/components/mainboards/MainboardList.js",["143"],"import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport {getMainboards} from '../../store/actions/mainboards';\nimport MainboardCard from './MainboardCard';\nimport SearchBox from '../layout/SearchBox';\nimport Scroll from '../layout/scroll';\nimport mainboards from '../../store/reducers/mainboards';\n\nclass MainboardList extends Component {\n    //     constructor() {\n    //     super()\n    //     this.state = {\n    //         filteredObjects = [],\n    //     }\n    //   }\n    static propTypes = {\n        mainboards: propTypes.array.isRequired,\n        filteredMainboards: propTypes.array.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.getMainboards();\n        // console.log(this.props.mainboards);\n    }\n    render() {\n        let { mainboards, filteredMainboards } = this.props;\n        if (filteredMainboards === undefined) filteredMainboards = mainboards;\n\n        return !mainboards.length ? (\n            <h1>Loading</h1>\n        ) : (\n            <Fragment>\n                <SearchBox mainboards={this.props.mainboards} />\n\n                <Scroll className=\"tc\">\n                    <div>\n                        {filteredMainboards.map((mb, i) => {\n                            return (\n                                <MainboardCard\n                                    key={i}\n                                    id={mb.id}\n                                    description={mb.description}\n                                />\n                            );\n                        })}\n                    </div>\n                </Scroll>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    mainboards: state.mainboards.mainboards,\n    filteredMainboards: state.searchObjects.filteredObjects\n});\n\n\nexport default connect(mapStateToProps , {getMainboards})(MainboardList);","/home/sajad/Desktop/finalproject/frontend/src/store/actions/mainboards.js",["144"],"import axios from 'axios';\n\nimport { GET_ERRORS, GET_MAINBOARDS_LIST } from './types';\n\n// GET MAINBOARD LIST\n\nexport const getMainboards = () => dispatch => {\n    axios.get('http://localhost:8000/api/mainboard/list')\n        .then(res => {\n            dispatch({\n                type: GET_MAINBOARDS_LIST,\n                payload: res.data\n            });\n        }).catch(err => {\n            console.log(err);\n            // const errors = {\n            //     msg: err.response.data,\n            //     status: err.response.status\n            // }\n            // dispatch({\n            //     type:GET_ERRORS,\n            //     payload: errors\n            // });\n        });\n};","/home/sajad/Desktop/finalproject/frontend/src/components/mainboards/MainboardCard.js",[],"/home/sajad/Desktop/finalproject/frontend/src/components/layout/Alerts.js",["145"],"import React, { Component , Fragment } from 'react';\nimport {withAlert} from 'react-alert';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nclass Alerts extends Component {\n    static propTypes = {\n        error: propTypes.object.isRequired\n    }\n    componentDidUpdate(prevProps){\n        const {error , alert} = this.props;\n        if(error != prevProps.error){\n            if(error.msg.name){\n                alert.error('there is an error');\n            }\n        }\n    }\n  render() {\n    return <Fragment />;\n  }\n}\n\nconst mapStateToProps = state => ({\n    error: state.errors\n})\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/errors.js",["146"],"import {GET_ERRORS} from '../actions/types';\n\nconst initialState = {\n    msg: {},\n    status:null\n}\n\nexport default function (state=initialState , action) {\n\n    switch (action.type) {\n        case GET_ERRORS:\n            return{\n                msg:action.payload.msg,\n                status: action.payload.status\n            }\n\n        default:\n            return state;\n    }\n}","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/messages.js",["147","148"],"import {GET_MESSAGE , CREATE_MESSAGE} from '../actions/types';\n\nconst initialState = {\n\n}\n\nexport default function (state=initialState , action) {\n\n    switch (action.type) {\n        case GET_MESSAGE:\n            return action.payload;\n\n// will there be some other pieces\n        default:\n            return state;\n    }\n}","/home/sajad/Desktop/finalproject/frontend/src/components/layout/SearchBox.js",["149"],"import React , {Component}from 'react';\nimport { connect } from 'react-redux';\nimport {setSearchField} from '../../store/actions/search';\nimport mainboards from '../../store/reducers/mainboards';\n\nlet objectList = [];\n\nclass SearchBox extends Component {\n\n  componentDidMount(){\n    objectList = this.props.objectList;\n  }\n  render() {\n      return (\n        <div className='pa2 '>\n          <input\n            className='tc pa3 ba b--green bg-lightest-blue'\n            type='search'\n            placeholder='search by description'\n            onChange={this.props.onSearchChange}\n          />\n        </div>\n      );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField ,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value,objectList))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);","/home/sajad/Desktop/finalproject/frontend/src/store/actions/search.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/reducers/search.js",[],"/home/sajad/Desktop/finalproject/frontend/src/components/accounts/Login.js",["150","151"],"import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import { login } from \"../../actions/auth\";\n\nexport class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  //   static propTypes = {\n  //     login: PropTypes.func.isRequired,\n  //     isAuthenticated: PropTypes.bool,\n  //   };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    const { username, password } = this.state;\n    return (\n      <div className=\"col-md-6 m-auto\">\n        <div className=\"card card-body mt-5\">\n          <h2 className=\"text-center\">Login</h2>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"input-sm form-group\">\n              <label>Username</label>\n              <input\n                type=\"text\"\n                className=\"tc pa3 ba b--green bg-lightest-blue form-control\"\n                name=\"username\"\n                placeholder=\"username\"\n                onChange={this.onChange}\n                value={username}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                placeholder=\"password\"\n                className=\"tc pa3 ba b--green bg-lightest-blue form-control\"\n                name=\"password\"\n                onChange={this.onChange}\n                value={password}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Login\n              </button>\n            </div>\n            <p>\n              Don't have an account? <Link to=\"/register\">Register</Link>\n            </p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: state.auth.isAuthenticated,\n// });\nexport default Login;\n// export default connect(mapStateToProps, { login })(Login);\n","/home/sajad/Desktop/finalproject/frontend/src/components/accounts/RegisterMainboard.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/reducers/auth.js",["152"],"import { USER_LOADED, AUTH_ERROR, USER_LOADING } from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n            };\n        case AUTH_ERROR:\n            localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n            };\n        default:\n            return state;\n    }\n}\n","/home/sajad/Desktop/finalproject/frontend/src/components/common/PrivateRoute.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/actions/auth.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/actions/messages.js",["153"],"import { CREATE_MESSAGE } from './types';\n\n// message types","/home/sajad/Desktop/finalproject/frontend/src/components/layout/scroll.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/actions/relatedSensors.js",["154"],"import axios from \"axios\";\n\nimport { GET_ERRORS, GET_RELATED_SENSORS } from \"./types\";\n\n// GET MAINBOARD LIST\n\nexport const getRelatedSensors = (id) => (dispatch) => {\n    axios\n        .get(`http://localhost:8000/api/sensors/list?mainboard_id=${id}`)\n        .then((res) => {\n            // console.log(`this is ${id}`);\n            dispatch({\n                type: GET_RELATED_SENSORS,\n                payload: res.data,\n                relatedMainboard: id,\n            });\n        })\n        .catch((err) => {\n            console.log(err);\n            // const errors = {\n            //     msg: err.response.data,\n            //     status: err.response.status\n            // }\n            // dispatch({\n            //     type:GET_ERRORS,\n            //     payload: errors\n            // });\n        });\n};\n","/home/sajad/Desktop/finalproject/frontend/src/store/reducers/relatedSensors.js",["155"],"import { GET_RELATED_SENSORS } from \"../actions/types.js\";\n\nconst initialState = {\n    sensors: [], \n    mainboardID: \"\",\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_RELATED_SENSORS:\n            // console.log(`action id is ${action.relatedMainboard}`);\n            return {\n                ...state,\n                sensors: action.payload,\n                mainboardID: action.relatedMainboard,\n            };\n\n        default:\n            return state;\n    }\n}\n","/home/sajad/Desktop/finalproject/frontend/src/components/sensors/SensorList.js",["156","157"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { getRelatedSensors } from \"../../store/actions/relatedSensors\";\nimport { getSensorTypes } from \"../../store/actions/sensorTypes\";\nimport SensorCard from \"./SensorCard\";\nimport SearchBox from \"../layout/SearchBox\";\nimport Scroll from \"../layout/scroll\";\nimport relatedSensors from \"../../store/reducers/relatedSensors\";\n\nclass SensorList extends Component {\n    //     constructor() {\n    //     super()\n    //     this.state = {\n    //         filteredObjects = [],\n    //     }\n    //   }\n    static propTypes = {\n        filteredSensors: propTypes.array.isRequired,\n        relatedSensors: propTypes.array.isRequired,\n        relatedMainboard: propTypes.string.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.getRelatedSensors();\n        this.props.getSensorTypes();\n    }\n    \n    render() {\n        let {\n            filteredSensors,\n            relatedSensors,\n            relatedMainboard,\n            sensorTypes,\n        } = this.props;\n        if (filteredSensors === undefined) filteredSensors = relatedSensors;\n        // console.log(`this is related mainboard ${relatedMainboard}`);\n        // console.log(relatedSensors);\n\n        return !relatedSensors.length ? (\n            <h1>Loading</h1>\n        ) : (\n            <Fragment>\n                <SearchBox objectList={this.props.relatedSensors} />\n\n                <Scroll className=\"tc\">\n                    <div>\n                        {filteredSensors.map((rs, i) => {\n                            return (\n                                <SensorCard\n                                    key={i}\n                                    id={rs.id}\n                                    description={rs.description}\n                                    type_id={rs.type_id}\n                                    sensorTypes={sensorTypes}\n                                />\n                            );\n                        })}\n                    </div>\n                </Scroll>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    relatedSensors: state.relatedSensors.sensors,\n    relatedMainboard: state.relatedSensors.mainboardID,\n    filteredSensors: state.searchObjects.filteredObjects,\n    sensorTypes: state.sensorTypes.sensorTypes,\n});\n\nexport default connect(mapStateToProps, { getRelatedSensors, getSensorTypes })(\n    SensorList\n);\n","/home/sajad/Desktop/finalproject/frontend/src/components/sensors/SensorCard.js",["158"],"import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass SensorCard extends Component {\n    render() {\n        let desc = \"Unknown Type\";\n        for (let i = 0; i < this.props.sensorTypes.length; i++) {\n            if ((this.props.type_id == this.props.sensorTypes[i].id)) {\n                desc = this.props.sensorTypes[i].description;\n            }\n        }\n        return (\n            <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw1 shadow-5\">\n                <Button variant=\"primary\" size=\"lg\" active>\n                    see sensor values\n                </Button>\n                <br />\n                <h1>Sensor ID</h1>\n                <h4>{this.props.id}</h4>\n                <br />\n                <br />\n                <br />\n                <br />\n                <div>\n                    <h1>Sensor Type</h1>\n                    <h4>{desc}</h4>\n\n                    <hr></hr>\n\n                    <h5>description:</h5>\n                    <p>{this.props.description}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SensorCard;\n","/home/sajad/Desktop/finalproject/frontend/src/store/actions/sensorTypes.js",[],"/home/sajad/Desktop/finalproject/frontend/src/store/reducers/sensorTypes.js",["159"],"import { GET_SENSOR_TYPES } from \"../actions/types.js\";\n\nconst initialState = {\n    sensorTypes: [],\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_SENSOR_TYPES:\n            // console.log(`action id is ${action.relatedMainboard}`);\n            return {\n                ...state,\n                sensorTypes: action.payload,\n            };\n\n        default:\n            return state;\n    }\n}\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":27,"column":13,"nodeType":"166","endLine":27,"endColumn":51},{"ruleId":"167","severity":1,"message":"168","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"171","line":10,"column":5,"nodeType":"169","messageId":"170","endLine":10,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":16,"column":8,"nodeType":"169","messageId":"170","endLine":16,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":7,"column":1,"nodeType":"175","endLine":19,"endColumn":2},{"ruleId":"167","severity":1,"message":"176","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":18},{"ruleId":"167","severity":1,"message":"177","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":11,"column":18,"nodeType":"180","messageId":"181","endLine":11,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":8,"column":1,"nodeType":"175","endLine":20,"endColumn":2},{"ruleId":"167","severity":1,"message":"182","line":1,"column":23,"nodeType":"169","messageId":"170","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"174","line":7,"column":1,"nodeType":"175","endLine":17,"endColumn":2},{"ruleId":"167","severity":1,"message":"176","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"183","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":17},{"ruleId":"167","severity":1,"message":"184","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":10,"column":1,"nodeType":"175","endLine":36,"endColumn":2},{"ruleId":"167","severity":1,"message":"182","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"177","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":8,"column":1,"nodeType":"175","endLine":21,"endColumn":2},{"ruleId":"167","severity":1,"message":"185","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":22},{"ruleId":"167","severity":1,"message":"186","line":33,"column":13,"nodeType":"169","messageId":"170","endLine":33,"endColumn":29},{"ruleId":"178","severity":1,"message":"187","line":8,"column":37,"nodeType":"180","messageId":"181","endLine":8,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":7,"column":1,"nodeType":"175","endLine":19,"endColumn":2},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'PrivateRoute' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'mainboards' is defined but never used.","'GET_ERRORS' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CREATE_MESSAGE' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'relatedSensors' is defined but never used.","'relatedMainboard' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]